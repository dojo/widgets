.root {
}

.filled {
	color: #fadb14;
}

.empty {
	color: var(--color-dark);
}

.character ~ .character {
	overflow: hidden;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
}

.halfCharacters .character ~ .character {
	width: 50%;
}

.halfCharacters .character ~ .character .radioRoot {
	position: absolute;
	right: 0;
}

.labelRoot {
	overflow: visible;
	cursor: pointer;
}

.groupRoot {
	display: inline-block;
	border: 1px solid transparent;
}

.radioRoot {
	padding: 0;
}

.over {
}

.integer {
	display: inline-block;
	position: relative;
	overflow: hidden;
}

.iconIcon {
	composes: icon from './icon.m.css';
}

/* fill all icons */
.filled {
	display: inline;
}
.empty {
	display: none;
}

/* empty icons if there is no selection */
.unselected .filled {
	display: none;
}
.unselected .empty {
	display: inline;
}

/* empty icons after the selected icon */
.selectedInteger ~ .integer .filled {
	display: none;
}
.selectedInteger ~ .integer .empty {
	display: inline;
}

/* empty icon segments after the selected one */
.selectedInteger .selectedCharacter ~ .character .filled {
	display: none;
}
.selectedInteger .selectedCharacter ~ .character .empty {
	display: inline;
}

/* fill all icons when the widget is hovered */
.root:hover .integer .filled {
	display: inline;
}
.root:hover .integer .empty {
	display: none;
}

/* empty all icons after the hovered icon */
.integer:hover ~ .integer .filled {
	display: none;
}
.integer:hover ~ .integer .empty {
	display: inline;
}

/* empty icon segments after the hovered one */
.integer .character:hover ~ .character .filled {
	display: none;
}
.integer .character:hover ~ .character .empty {
	display: inline;
}

/* Added to disabled ratings group */
.disabled {
	opacity: 0.5;
}

/* Added to readonly ratings group */
.readOnly {
}
