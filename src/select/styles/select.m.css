@import '../../common/styles/variables.css';

.root {
	font: var(--base-font);
}

.inputWrapper {
	display: inline-block;
	perspective: 300px;
	position: relative;
}

/* custom input styles */
.trigger {
	background-color: transparent;
	border: 3px solid var(--input-border-color);
	font-size: inherit;
	min-width: 200px;
	outline: none;
	padding: 0.75em 3.5em 0.75em 1em;
	position: relative;
	text-align: left;
}

.trigger::before {
	background-color: var(--input-border-color);
	bottom: 0;
	content: "";
	pointer-events: none;
	position: absolute;
	right: 0;
	top: 0;
	transition: all var(--short-animation-duration) ease;
	width: 2.5em;
}

.trigger::after {
	border-bottom: 2px solid var(--dojo-white);
	border-left: 2px solid var(--dojo-white);
	content: "";
	height: 0.5em;
	position: absolute;
	right: 1.25em;
	top: 50%;
	transform: translate(50%, -65%) rotate(-45deg);
	width: 0.5em;
}

.trigger:focus {
	border-color: var(--input-highlight-color);
}

.trigger:focus::before {
	background-color: var(--input-highlight-color);
}

.dropdown {
	opacity: 0;
	position: absolute;
	transform: rotateX(90deg);
	transform-origin: 0 0;
	transition: all var(--short-animation-duration) ease-out;
	width: 100%;
}

.open {
	z-index: 2;
}

.open .dropdown {
	opacity: 1;
	transform: rotateX(0);
}

.option {
	background-color: var(--dojo-white);
	cursor: pointer;
	padding: var(--input-padding);
}

.disabledOption {
	background-color: var(--dojo-light-gray);
	cursor: default;
}

.dropdown .focused,
.input:focus .focused {
	background-color: var(--dojo-light-blue);
}

.selected { }

/* native input styles */
.input {
	appearance: none;
	background-color: transparent;
	border: 3px solid var(--input-border-color);
	border-radius: 0;
	cursor: pointer;
	display: block;
	font-size: inherit;
	line-height: 1;
	max-width: 100%;
	outline: 0;
	padding: 0.75em 3.5em 0.75em 1em;
	transition: border var(--short-animation-duration) ease;
	width: var(--form-field-width);
}

.input:focus {
	border-color: var(--input-highlight-color);
}

.arrow {
	background-color: var(--input-border-color);
	bottom: 0;
	pointer-events: none;
	position: absolute;
	right: 0;
	top: 0;
	transition: all var(--short-animation-duration) ease;
	width: 2.5em;
}

.arrow::after {
	border-bottom: 2px solid var(--dojo-white);
	border-left: 2px solid var(--dojo-white);
	content: "";
	height: 0.5em;
	position: absolute;
	right: 50%;
	top: 50%;
	transform: translate(50%, -65%) rotate(-45deg);
	width: 0.5em;
}


.input:focus ~ .arrow {
	background-color: var(--input-highlight-color);
}

/* State classes */
.disabled .input,
.readonly .input {
	background-color: var(--dojo-light-gray);
}

.invalid .input {
	border-color: var(--dojo-error-color);
}
.invalid .arrow {
	background-color: var(--dojo-error-color);
}

.valid .input {
	border-color: var(--dojo-success-color);
}
.valid .arrow {
	background-color: var(--dojo-success-color);
}

.required > span::after {
	content: '*';
	color: var(--dojo-error-color);
}

.multiselect .input {
	padding: 0;
}

.multiselect .arrow {
	display: none;
}
