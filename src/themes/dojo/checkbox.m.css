@import './variables.css';

.root,
.root *,
.root *::before,
.root *::after {
	box-sizing: border-box;
}

.root {
	display: block;
	font-size: var(--font-size-base);
	line-height: var(--line-height-base);
	padding: 0 0 0 calc(var(--grid-base) * 3);
	position: relative;
}

.input {
	appearance: none;
	height: 100%;
	left: 0;
	margin: 0;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: -1;
}

.inputWrapper {
	left: 0;
	position: absolute;
	top: 0;
}

.inputWrapper::before,
.inputWrapper::after {
	box-sizing: border-box;
	content: '';
	display: block;
}

.inputWrapper::before {
	border: var(--border-width) solid var(--color-border-strong);
	height: calc(var(--grid-base) * 2);
	width: calc(var(--grid-base) * 2);
}

.inputWrapper::after {
	color: var(--color-border-strong);
	height: calc(var(--grid-base) * 2);
	left: 3px;
	position: absolute;
	text-align: center;
	top: 3px;
	transform: scale(0);
	transition: all var(--short-animation-duration) var(--short-animation-easing);
	width: calc(var(--grid-base) * 2);
}

/* checked style */
.checked .inputWrapper::after {
	transform: scale(1);
}

/* disabled and readonly styles */
.disabled .inputWrapper::before,
.readonly .inputWrapper::before {
	background-color: var(--color-background-faded);
	border-color: var(--color-border);
}

/* required style, only applies to inputs with a label */
.required span::after {
	content: '*';
}

/* invalid style */
.invalid .inputWrapper::before {
	border-color: var(--dojo-error-color);
}
.invalid .inputWrapper::after {
	background-color: var(--dojo-error-color);
}

/* valid style */
.valid .inputWrapper::before {
	border-color: var(--dojo-success-color);
}
.valid .inputWrapper::after {
	background-color: var(--dojo-success-color);
}

/* Toggle mode */
.toggle {
	padding-left: 0;
}

.toggle .inputWrapper {
	width: auto;
	position: relative;
}

.toggle .inputWrapper::before,
.toggle .inputWrapper::after {
	display: none;
}

.toggle .input {
	width: auto;
}

.toggleSwitch {
	background-color: var(--color-border);
	border: var(--border-width) solid var(--color-border-strong);
	border-radius: calc(var(--line-height-base) / 2);
	display: inline-block;
	height: var(--line-height-base);
	position: relative;
	transition: background var(--transition-duration) var(--transition-easing), border var(--transition-duration) var(--transition-easing);
	vertical-align: middle;
	width: calc(var(--line-height-base) * 1.75);
}

.toggleSwitch::before,
.toggleSwitch::after {
	border-radius: calc(var(--line-height-base) / 2);
	content: "";
	height: var(--line-height-base);
	left: calc(var(--border-width) * -1);
	position: absolute;
	top: calc(var(--border-width) * -1);
	transition: all var(--transition-duration) var(--transition-easing);
	width: var(--line-height-base);
}

.toggleSwitch::before {
	background-color: var(--color-background);
	border: var(--border-width) solid var(--color-border-strong);
}

.toggleSwitch::after {
	background-color: var(--color-highlight);
	transform: translate(0, 0) scale(0);
}

.onLabel,
.offLabel {
	color: var(--color-text-faded);
	display: inline-block;
}

.onLabel {
	padding-left: var(--spacing-regular);
}

.offLabel {
	padding-right: var(--spacing-regular);
}

.checked .toggleSwitch {
	background-color: var(--color-highlight);
	border-color: var(--color-highlight);
}

.checked .toggleSwitch::before {
	border-color: var(--color-highlight);
	transform: translate(75%, 0);
}

.checked .toggleSwitch::after {
	border-color: var(--color-highlight);
	transform: translate(75%, 0) scale(0);
}

/* Focused styles */

.focused .toggleSwitch::before {
	box-shadow: var(--box-shadow-dimensions-small) color(var(--color-highlight) alpha(20%));
}

.focused .toggleSwitch::after {
	transform: translate(0, 0) scale(0.5);
}

.focused.checked .toggleSwitch {
	box-shadow: var(--box-shadow-dimensions-small) color(var(--color-highlight) alpha(20%));
}

.focused.checked .toggleSwitch::after {
	transform: translate(75%, 0) scale(0.5);
}

.focused .onLabel,
.focused .offLabel {
	color: var(--color-highlight);
}

.disabled .toggleSwitch,
.readonly .toggleSwitch {
	background-color: var(--color-background-faded);
	border-color: var(--color-border-strong);
}

.disabled .toggleSwitch::before,
.readonly .toggleSwitch::before {
	background-color: var(--color-background-faded);
	border-color: var(--color-border-strong);
}
