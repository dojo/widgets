{"version":3,"file":"has.mjs","sourceRoot":"","sources":["../../../../src/has/has.ts"],"names":[],"mappings":"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","sourcesContent":["import { Require, Config } from './loader';\n\n/**\n * The valid return types from a feature test\n */\nexport type FeatureTestResult = boolean | string | number | undefined | void;\n\n/**\n * A function that tests for a feature and returns a result\n */\nexport type FeatureTest = () => FeatureTestResult;\n\nexport type FeatureTestThenable = PromiseLike<FeatureTestResult>;\n\nfunction isFeatureTestThenable(value: any): value is FeatureTestThenable {\n\treturn value && value.then;\n}\n\n/**\n * A cache of results of feature tests\n */\nexport const testCache: { [feature: string]: FeatureTestResult } = {};\n\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions: { [feature: string]: FeatureTest } = {};\n\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables: { [feature: string]: FeatureTestThenable } = {};\n\nexport interface StaticHasFeatures {\n\t[feature: string]: FeatureTestResult;\n}\n\nexport interface DojoHasEnvironment {\n\t/**\n\t * Static features defined in the enviornment that should be used by the `has` module\n\t * instead of run-time detection.\n\t */\n\tstaticFeatures?: StaticHasFeatures | (() => StaticHasFeatures);\n}\n\ndeclare global {\n\tinterface Window {\n\t\t/**\n\t\t * The `dojo/has` enviornment which provides configuration when the module is\n\t\t * loaded.\n\t\t */\n\t\tDojoHasEnvironment?: DojoHasEnvironment;\n\t}\n}\n\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function(): any {\n\t/* istanbul ignore else */\n\tif (typeof window !== 'undefined') {\n\t\t// Browsers\n\t\treturn window;\n\t} else if (typeof global !== 'undefined') {\n\t\t// Node\n\t\treturn global;\n\t} else if (typeof self !== 'undefined') {\n\t\t// Web workers\n\t\treturn self;\n\t}\n\t/* istanbul ignore next */\n\treturn {};\n})();\n\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures }: DojoHasEnvironment = globalScope.DojoHasEnvironment || {};\n\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n\tdelete globalScope.DojoHasEnvironment;\n}\n\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value: any): value is (() => StaticHasFeatures) {\n\treturn typeof value === 'function';\n}\n\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache: StaticHasFeatures = staticFeatures\n\t? isStaticFeatureFunction(staticFeatures) ? staticFeatures.apply(globalScope) : staticFeatures\n\t: {}; /* Providing an empty cache, if none was in the environment\n\n/**\n * AMD plugin function.\n *\n * Conditional loads modules based on a has feature test value.\n *\n * @param resourceId Gives the resolved module id to load.\n * @param require The loader require function with respect to the module that contained the plugin resource in its\n *                dependency list.\n * @param load Callback to loader that consumes result of plugin demand.\n */\nexport function load(resourceId: string, require: Require, load: (value?: any) => void, config?: Config): void {\n\tresourceId ? require([resourceId], load) : load();\n}\n\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId: string, normalize: (moduleId: string) => string): string | null {\n\tconst tokens: RegExpMatchArray = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n\tlet i = 0;\n\n\tfunction get(skip?: boolean): string | null {\n\t\tconst term = tokens[i++];\n\t\tif (term === ':') {\n\t\t\t// empty string module name, resolves to null\n\t\t\treturn null;\n\t\t} else {\n\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n\t\t\tif (tokens[i++] === '?') {\n\t\t\t\tif (!skip && has(term)) {\n\t\t\t\t\t// matched the feature, get the first value from the options\n\t\t\t\t\treturn get();\n\t\t\t\t} else {\n\t\t\t\t\t// did not match, get the second value, passing over the first\n\t\t\t\t\tget(true);\n\t\t\t\t\treturn get(skip);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// a module\n\t\t\treturn term;\n\t\t}\n\t}\n\n\tconst id = get();\n\n\treturn id && normalize(id);\n}\n\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature: string): boolean {\n\tconst normalizedFeature = feature.toLowerCase();\n\n\treturn Boolean(\n\t\tnormalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]\n\t);\n}\n\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(\n\tfeature: string,\n\tvalue: FeatureTest | FeatureTestResult | FeatureTestThenable,\n\toverwrite: boolean = false\n): void {\n\tconst normalizedFeature = feature.toLowerCase();\n\n\tif (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n\t\tthrow new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n\t}\n\n\tif (typeof value === 'function') {\n\t\ttestFunctions[normalizedFeature] = value;\n\t} else if (isFeatureTestThenable(value)) {\n\t\ttestThenables[feature] = value.then(\n\t\t\t(resolvedValue: FeatureTestResult) => {\n\t\t\t\ttestCache[feature] = resolvedValue;\n\t\t\t\tdelete testThenables[feature];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tdelete testThenables[feature];\n\t\t\t}\n\t\t);\n\t} else {\n\t\ttestCache[normalizedFeature] = value;\n\t\tdelete testFunctions[normalizedFeature];\n\t}\n}\n\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature: string): FeatureTestResult {\n\tlet result: FeatureTestResult;\n\n\tconst normalizedFeature = feature.toLowerCase();\n\n\tif (normalizedFeature in staticCache) {\n\t\tresult = staticCache[normalizedFeature];\n\t} else if (testFunctions[normalizedFeature]) {\n\t\tresult = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n\t\tdelete testFunctions[normalizedFeature];\n\t} else if (normalizedFeature in testCache) {\n\t\tresult = testCache[normalizedFeature];\n\t} else if (feature in testThenables) {\n\t\treturn false;\n\t} else {\n\t\tthrow new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n\t}\n\n\treturn result;\n}\n\n/*\n * Out of the box feature tests\n */\n\n/* Environments */\n\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function() {\n\tif (typeof process === 'object' && process.versions && process.versions.node) {\n\t\treturn process.versions.node;\n\t}\n});\n"]}