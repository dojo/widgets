{"version":3,"file":"UrlSearchParams.js","sourceRoot":"","sources":["../../../../src/core/UrlSearchParams.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hash } from './interfaces';\nimport { duplicate } from './lang';\n\n/**\n * Object with string keys and string or string array values that describes a query string.\n */\nexport type ParamList = Hash<string | string[]>;\n\n/**\n * Parses a query string, returning a ParamList object.\n */\nfunction parseQueryString(input: string): ParamList {\n\tconst query: Hash<string[]> = {};\n\tconst splits = input.split('&');\n\n\tfor (let i = 0; i < splits.length; i++) {\n\t\tconst entry = splits[i];\n\t\tconst indexOfFirstEquals = entry.indexOf('=');\n\t\tlet key: string;\n\t\tlet value = '';\n\n\t\tif (indexOfFirstEquals >= 0) {\n\t\t\tkey = entry.slice(0, indexOfFirstEquals);\n\t\t\tvalue = entry.slice(indexOfFirstEquals + 1);\n\t\t} else {\n\t\t\tkey = entry;\n\t\t}\n\n\t\tkey = key ? decodeURIComponent(key) : '';\n\t\tvalue = value ? decodeURIComponent(value) : '';\n\n\t\tif (key in query) {\n\t\t\tquery[key].push(value);\n\t\t} else {\n\t\t\tquery[key] = [value];\n\t\t}\n\t}\n\treturn query;\n}\n\n/**\n * Represents a set of URL query search parameters.\n */\nexport class UrlSearchParams {\n\t/**\n\t * Constructs a new UrlSearchParams from a query string, an object of parameters and values, or another\n\t * UrlSearchParams.\n\t */\n\tconstructor(input?: string | ParamList | UrlSearchParams) {\n\t\tlet list: ParamList = {};\n\n\t\tif (input instanceof UrlSearchParams) {\n\t\t\t// Copy the incoming UrlSearchParam's internal list\n\t\t\tlist = <ParamList>duplicate(input._list);\n\t\t} else if (typeof input === 'object') {\n\t\t\t// Copy the incoming object, assuming its property values are either arrays or strings\n\t\t\tlist = {};\n\t\t\tfor (const key in input) {\n\t\t\t\tconst value = (<ParamList>input)[key];\n\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tlist[key] = value.length ? value.slice() : [''];\n\t\t\t\t} else if (value == null) {\n\t\t\t\t\tlist[key] = [''];\n\t\t\t\t} else {\n\t\t\t\t\tlist[key] = [<string>value];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof input === 'string') {\n\t\t\t// Parse the incoming string as a query string\n\t\t\tlist = parseQueryString(input);\n\t\t}\n\n\t\tthis._list = list as Hash<string[] | undefined>;\n\t}\n\n\t/**\n\t * Maps property keys to arrays of values. The value for any property that has been set will be an array containing\n\t * at least one item. Properties that have been deleted will have a value of 'undefined'.\n\t */\n\tprotected readonly _list: Hash<string[] | undefined>;\n\n\t/**\n\t * Appends a new value to the set of values for a key.\n\t * @param key The key to add a value for\n\t * @param value The value to add\n\t */\n\tappend(key: string, value: string): void {\n\t\tif (!this.has(key)) {\n\t\t\tthis.set(key, value);\n\t\t} else {\n\t\t\tconst values = this._list[key];\n\t\t\tif (values) {\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deletes all values for a key.\n\t * @param key The key whose values are to be removed\n\t */\n\tdelete(key: string): void {\n\t\t// Set to undefined rather than deleting the key, for better consistency across browsers.\n\t\t// If a deleted key is re-added, most browsers put it at the end of iteration order, but IE maintains\n\t\t// its original position.  This approach maintains the original position everywhere.\n\t\tthis._list[key] = undefined;\n\t}\n\n\t/**\n\t * Returns the first value associated with a key.\n\t * @param key The key to return the first value for\n\t * @return The first string value for the key\n\t */\n\tget(key: string): string | undefined {\n\t\tif (!this.has(key)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst value = this._list[key];\n\t\treturn value ? value[0] : undefined;\n\t}\n\n\t/**\n\t * Returns all the values associated with a key.\n\t * @param key The key to return all values for\n\t * @return An array of strings containing all values for the key\n\t */\n\tgetAll(key: string): string[] | undefined {\n\t\tif (!this.has(key)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._list[key];\n\t}\n\n\t/**\n\t * Returns true if a key has been set to any value, false otherwise.\n\t * @param key The key to test for existence\n\t * @return A boolean indicating if the key has been set\n\t */\n\thas(key: string): boolean {\n\t\treturn Array.isArray(this._list[key]);\n\t}\n\n\t/**\n\t * Returns an array of all keys which have been set.\n\t * @return An array of strings containing all keys set in the UrlSearchParams instance\n\t */\n\tkeys(): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tfor (const key in this._list) {\n\t\t\tif (this.has(key)) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\t/**\n\t * Sets the value associated with a key.\n\t * @param key The key to set the value of\n\t */\n\tset(key: string, value: string): void {\n\t\tthis._list[key] = [value];\n\t}\n\n\t/**\n\t * Returns this object's data as an encoded query string.\n\t * @return A string in application/x-www-form-urlencoded format containing all of the set keys/values\n\t */\n\ttoString(): string {\n\t\tconst query: string[] = [];\n\n\t\tfor (const key in this._list) {\n\t\t\tif (!this.has(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst values = this._list[key];\n\t\t\tif (values) {\n\t\t\t\tconst encodedKey = encodeURIComponent(key);\n\t\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\t\tquery.push(encodedKey + (values[i] ? '=' + encodeURIComponent(values[i]) : ''));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn query.join('&');\n\t}\n}\n\nexport default UrlSearchParams;\n"]}