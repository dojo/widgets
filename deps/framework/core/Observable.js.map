{"version":3,"file":"Observable.js","sourceRoot":"","sources":["../../../../src/core/Observable.ts"],"names":[],"mappings":"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","sourcesContent":["import ObservableShim, { ObservableObject, Subscribable, SubscriptionObserver } from '../shim/Observable';\nimport Promise from '../shim/Promise';\nimport { Iterable } from '../shim/iterator';\n\nfunction isSubscribable(object: any): object is Subscribable<any> {\n\treturn object && object.subscribe !== undefined;\n}\n\nexport default class Observable<T> extends ObservableShim<T> {\n\tstatic of<T>(...items: T[]): Observable<T> {\n\t\treturn <Observable<T>>super.of(...items);\n\t}\n\n\tstatic from<T>(item: Iterable<T> | ArrayLike<T> | ObservableObject): Observable<T> {\n\t\treturn <Observable<T>>super.from(item);\n\t}\n\n\tstatic defer<T>(deferFunction: () => Subscribable<T>): Observable<T> {\n\t\treturn new Observable<T>((observer) => {\n\t\t\tconst trueObservable = deferFunction();\n\n\t\t\treturn trueObservable.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\treturn observer.next(value);\n\t\t\t\t},\n\t\t\t\terror(errorValue?: any) {\n\t\t\t\t\treturn observer.error(errorValue);\n\t\t\t\t},\n\t\t\t\tcomplete(completeValue?: any) {\n\t\t\t\t\tobserver.complete(completeValue);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\ttoPromise(): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tthis.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\tresolve(value);\n\t\t\t\t},\n\t\t\t\terror(error: any) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tmap<U>(mapFunction: (x: T) => U): Observable<U> {\n\t\tconst self = this;\n\n\t\tif (typeof mapFunction !== 'function') {\n\t\t\tthrow new TypeError('Map parameter must be a function');\n\t\t}\n\n\t\treturn new Observable<U>((observer: SubscriptionObserver<U>) => {\n\t\t\tself.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result: U = mapFunction(value);\n\t\t\t\t\t\treturn observer.next(result);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn observer.error(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror(errorValue?: any) {\n\t\t\t\t\treturn observer.error(errorValue);\n\t\t\t\t},\n\t\t\t\tcomplete(completeValue?: any) {\n\t\t\t\t\treturn observer.complete(completeValue);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfilter(filterFunction: (x: T) => boolean): Observable<T> {\n\t\tconst self = this;\n\n\t\tif (typeof filterFunction !== 'function') {\n\t\t\tthrow new TypeError('Filter argument must be a function');\n\t\t}\n\n\t\treturn new Observable<T>((observer: SubscriptionObserver<T>) => {\n\t\t\tself.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (filterFunction(value)) {\n\t\t\t\t\t\t\treturn observer.next(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn observer.error(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror(errorValue?: any) {\n\t\t\t\t\treturn observer.error(errorValue);\n\t\t\t\t},\n\t\t\t\tcomplete(completeValue?: any) {\n\t\t\t\t\treturn observer.complete(completeValue);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\ttoArray(): Observable<T[]> {\n\t\tconst self = this;\n\n\t\treturn new Observable<T[]>((observer) => {\n\t\t\tconst values: T[] = [];\n\n\t\t\tself.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t},\n\t\t\t\terror(errorValue?: any) {\n\t\t\t\t\treturn observer.error(errorValue);\n\t\t\t\t},\n\t\t\t\tcomplete(completeValue?: any) {\n\t\t\t\t\tobserver.next(values);\n\t\t\t\t\tobserver.complete(completeValue);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tmergeAll(concurrent: number): Observable<any> {\n\t\tconst self = this;\n\n\t\treturn new Observable<Observable<any>>((observer) => {\n\t\t\tlet active: any[] = [];\n\t\t\tlet queue: any[] = [];\n\n\t\t\tfunction checkForComplete() {\n\t\t\t\tif (active.length === 0 && queue.length === 0) {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t} else if (queue.length > 0 && active.length < concurrent) {\n\t\t\t\t\tconst item = queue.shift();\n\n\t\t\t\t\tif (isSubscribable(item)) {\n\t\t\t\t\t\tconst itemIndex = active.length;\n\t\t\t\t\t\tactive.push(item);\n\n\t\t\t\t\t\titem.subscribe({\n\t\t\t\t\t\t\tnext(value: any) {\n\t\t\t\t\t\t\t\tobserver.next(value);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete() {\n\t\t\t\t\t\t\t\tactive.splice(itemIndex, 1);\n\t\t\t\t\t\t\t\tcheckForComplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobserver.next(item);\n\t\t\t\t\t\tcheckForComplete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.subscribe({\n\t\t\t\tnext(value: T) {\n\t\t\t\t\tqueue.push(value);\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tcheckForComplete();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\n// for convienence, re-export some interfaces from shim\nexport { Observable, Subscribable, SubscriptionObserver as Observer };\n"]}