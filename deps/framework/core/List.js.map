{"version":3,"file":"List.js","sourceRoot":"","sources":["../../../../src/core/List.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArrayLike, isIterable, Iterable, IterableIterator, ShimIterator } from '../shim/iterator';\nimport WeakMap from '../shim/WeakMap';\n\nconst listItems: WeakMap<List<any>, any[]> = new WeakMap<List<any>, any[]>();\n\nfunction getListItems<T>(list: List<T>): T[] {\n\treturn (listItems.get(list) || []) as T[];\n}\n\nexport class List<T> {\n\t[Symbol.iterator]() {\n\t\treturn this.values();\n\t}\n\n\tget size(): number {\n\t\treturn getListItems(this).length;\n\t}\n\n\tconstructor(source?: Iterable<T> | ArrayLike<T>) {\n\t\tlistItems.set(this, []);\n\n\t\tif (source) {\n\t\t\tif (isArrayLike(source)) {\n\t\t\t\tfor (let i = 0; i < source.length; i++) {\n\t\t\t\t\tthis.add(source[i]);\n\t\t\t\t}\n\t\t\t} else if (isIterable(source)) {\n\t\t\t\tfor (const item of source) {\n\t\t\t\t\tthis.add(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(value: T): this {\n\t\tgetListItems(this).push(value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tlistItems.set(this, []);\n\t}\n\n\tdelete(idx: number): boolean {\n\t\tif (idx < this.size) {\n\t\t\tgetListItems(this).splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tentries(): IterableIterator<[number, T]> {\n\t\treturn new ShimIterator<[number, T]>(getListItems(this).map<[number, T]>((value, index) => [index, value]));\n\t}\n\n\tforEach(fn: (value: T, idx: number, list: this) => void, thisArg?: any): void {\n\t\tgetListItems(this).forEach(fn.bind(thisArg ? thisArg : this));\n\t}\n\n\thas(idx: number): boolean {\n\t\treturn this.size > idx;\n\t}\n\n\tincludes(value: T): boolean {\n\t\treturn getListItems(this).indexOf(value) >= 0;\n\t}\n\n\tindexOf(value: T): number {\n\t\treturn getListItems(this).indexOf(value);\n\t}\n\n\tjoin(separator: string = ','): string {\n\t\treturn getListItems(this).join(separator);\n\t}\n\n\tkeys(): IterableIterator<number> {\n\t\treturn new ShimIterator<number>(getListItems(this).map<number>((_, index) => index));\n\t}\n\n\tlastIndexOf(value: T): number {\n\t\treturn getListItems(this).lastIndexOf(value);\n\t}\n\n\tpush(value: T): void {\n\t\tthis.add(value);\n\t}\n\n\tpop(): T | undefined {\n\t\treturn getListItems(this).pop();\n\t}\n\n\tsplice(start: number, deleteCount?: number, ...newItems: T[]): T[] {\n\t\treturn getListItems(this).splice(\n\t\t\tstart,\n\t\t\tdeleteCount === undefined ? this.size - start : deleteCount,\n\t\t\t...newItems\n\t\t);\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn new ShimIterator<T>(getListItems(this).map<T>((value) => value));\n\t}\n}\n\nexport default List;\n"]}