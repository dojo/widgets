{"version":3,"file":"SubscriptionPool.js","sourceRoot":"","sources":["../../../../../src/core/request/SubscriptionPool.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA;QAKC,0BAAY,SAAc;YAAd,0BAAA,EAAA,cAAc;YAJlB,eAAU,GAA8B,EAAE,CAAC;YAC3C,WAAM,GAAQ,EAAE,CAAC;YAIxB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QAClC,CAAC;QAED,8BAAG,GAAH,UAAI,YAAqC;YAAzC,iBAUC;YATA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAG,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,CAAC;gBACN,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC;QACH,CAAC;QAED,+BAAI,GAAJ,UAAK,KAAQ;YACZ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAExB,oDAAoD;gBACpD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;oBAClD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACrB,CAAC;YACF,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,QAAQ;gBAChC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,mCAAQ,GAAR;YACC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,QAAQ;gBAChC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACJ,CAAC;QACF,uBAAC;IAAD,CAAC,AAzCD,IAyCC;IAzCY,4CAAgB;IA2C7B,kBAAe,gBAAgB,CAAC","sourcesContent":["import { SubscriptionObserver } from '../../shim/Observable';\n\nexport class SubscriptionPool<T> {\n\tprivate _observers: SubscriptionObserver<T>[] = [];\n\tprivate _queue: T[] = [];\n\tprivate _queueMaxLength: number;\n\n\tconstructor(maxLength = 10) {\n\t\tthis._queueMaxLength = maxLength;\n\t}\n\n\tadd(subscription: SubscriptionObserver<T>) {\n\t\tthis._observers.push(subscription);\n\n\t\twhile (this._queue.length > 0) {\n\t\t\tthis.next(this._queue.shift()!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tthis._observers.splice(this._observers.indexOf(subscription), 1);\n\t\t};\n\t}\n\n\tnext(value: T) {\n\t\tif (this._observers.length === 0) {\n\t\t\tthis._queue.push(value);\n\n\t\t\t// when the queue is full, get rid of the first ones\n\t\t\twhile (this._queue.length > this._queueMaxLength) {\n\t\t\t\tthis._queue.shift();\n\t\t\t}\n\t\t}\n\n\t\tthis._observers.forEach((observer) => {\n\t\t\tobserver.next(value);\n\t\t});\n\t}\n\n\tcomplete() {\n\t\tthis._observers.forEach((observer) => {\n\t\t\tobserver.complete();\n\t\t});\n\t}\n}\n\nexport default SubscriptionPool;\n"]}