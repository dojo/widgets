{"version":3,"file":"array.js","sourceRoot":"","sources":["array.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,mCAA8B;IAC9B,uCAA+D;IAC/D,mCAA4C;IAC5C,qCAAgC;IAChC,uCAA4C;IAqH5C,EAAE,CAAC,CAAC,aAAG,CAAC,WAAW,CAAC,IAAI,aAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC/C,YAAI,GAAG,gBAAM,CAAC,KAAK,CAAC,IAAI,CAAC;QACzB,UAAE,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAE,CAAC;QACrB,kBAAU,GAAG,iBAAU,CAAC,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC3D,YAAI,GAAG,iBAAU,CAAC,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC/C,YAAI,GAAG,iBAAU,CAAC,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC/C,iBAAS,GAAG,iBAAU,CAAC,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAAC,IAAI,CAAC,CAAC;QACP,wGAAwG;QACxG,0GAA0G;QAE1G;;;;;WAKG;QACH,IAAM,UAAQ,GAAG,kBAAkB,MAAc;YAChD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC;YAED,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;YACD,4CAA4C;YAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,yBAAgB,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF;;;;;WAKG;QACH,IAAM,WAAS,GAAG,mBAAmB,KAAU;YAC9C,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF;;;;;;WAMG;QACH,IAAM,iBAAe,GAAG,yBAAyB,KAAa,EAAE,MAAc;YAC7E,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC1E,CAAC,CAAC;QAEF,YAAI,GAAG,cAEN,SAAyC,EACzC,WAAmC,EACnC,OAAa;YAEb,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;YAC5D,CAAC;YAED,EAAE,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC;gBAC5B,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,CAAC;YAED,4CAA4C;YAC5C,IAAM,WAAW,GAAG,IAAI,CAAC;YACzB,IAAM,MAAM,GAAW,UAAQ,CAAO,SAAU,CAAC,MAAM,CAAC,CAAC;YAEzD,oBAAoB;YACpB,IAAM,KAAK,GACV,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAQ,MAAM,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YAEhG,EAAE,CAAC,CAAC,CAAC,sBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,0GAA0G;YAC1G,0DAA0D;YAC1D,EAAE,CAAC,CAAC,sBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC5B,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,EAAE,CAAC;gBACX,CAAC;gBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3C,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACtE,CAAC;YACF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,GAAG,CAAC,CAAC;;oBACV,GAAG,CAAC,CAAgB,IAAA,cAAA,iBAAA,SAAS,CAAA,oCAAA;wBAAxB,IAAM,KAAK,sBAAA;wBACf,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBACvD,CAAC,EAAE,CAAC;qBACJ;;;;;;;;;YACF,CAAC;YAED,EAAE,CAAC,CAAO,SAAU,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC3C,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;;QACd,CAAC,CAAC;QAEF,UAAE,GAAG;YAAe,eAAa;iBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;gBAAb,0BAAa;;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,kBAAU,GAAG,oBACZ,MAAoB,EACpB,MAAc,EACd,KAAa,EACb,GAAY;YAEZ,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBACpB,MAAM,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAC;YACxE,CAAC;YAED,IAAM,MAAM,GAAG,UAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACvC,MAAM,GAAG,iBAAe,CAAC,WAAS,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;YACpD,KAAK,GAAG,iBAAe,CAAC,WAAS,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;YAClD,GAAG,GAAG,iBAAe,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAS,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;YAC3E,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;YAEnD,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,IAAI,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;gBAC9C,SAAS,GAAG,CAAC,CAAC,CAAC;gBACf,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;gBACnB,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;YACrB,CAAC;YAED,OAAO,KAAK,GAAG,CAAC,EAAE,CAAC;gBAClB,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;oBACpB,MAA+B,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC1D,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,OAAQ,MAA+B,CAAC,MAAM,CAAC,CAAC;gBACjD,CAAC;gBAED,MAAM,IAAI,SAAS,CAAC;gBACpB,KAAK,IAAI,SAAS,CAAC;gBACnB,KAAK,EAAE,CAAC;YACT,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QACf,CAAC,CAAC;QAEF,YAAI,GAAG,cAAiB,MAAoB,EAAE,KAAU,EAAE,KAAc,EAAE,GAAY;YACrF,IAAM,MAAM,GAAG,UAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,CAAC,GAAG,iBAAe,CAAC,WAAS,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;YAClD,GAAG,GAAG,iBAAe,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAS,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;YAE3E,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC;gBACf,MAA+B,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;YAC/C,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QACf,CAAC,CAAC;QAEF,YAAI,GAAG,cAAiB,MAAoB,EAAE,QAAyB,EAAE,OAAY;YACpF,IAAM,KAAK,GAAG,iBAAS,CAAI,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjD,CAAC,CAAC;QAEF,iBAAS,GAAG,mBAAsB,MAAoB,EAAE,QAAyB,EAAE,OAAY;YAC9F,IAAM,MAAM,GAAG,UAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAEvC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACf,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;YACjE,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,CAAC,CAAC,CAAC;gBACV,CAAC;YACF,CAAC;YAED,MAAM,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC;IACH,CAAC;IAED,EAAE,CAAC,CAAC,aAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACtB,gBAAQ,GAAG,iBAAU,CAAC,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAAC,IAAI,CAAC,CAAC;QACP;;;;;WAKG;QACH,IAAM,UAAQ,GAAG,kBAAkB,MAAc;YAChD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC;YACD,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;YACD,4CAA4C;YAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,yBAAgB,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,gBAAQ,GAAG,kBAAqB,MAAoB,EAAE,aAAgB,EAAE,SAAqB;YAArB,0BAAA,EAAA,aAAqB;YAC5F,IAAI,GAAG,GAAG,UAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAElC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC;gBACtC,IAAM,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CACF,aAAa,KAAK,cAAc;oBAChC,CAAC,aAAa,KAAK,aAAa,IAAI,cAAc,KAAK,cAAc,CACtE,CAAC,CAAC,CAAC;oBACF,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;YACF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC,CAAC;IACH,CAAC","sourcesContent":["import global from './global';\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\ninterface WritableArrayLike<T> {\n\treadonly length: number;\n\t[n: number]: T;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\nif (has('es6-array') && has('es6-array-fill')) {\n\tfrom = global.Array.from;\n\tof = global.Array.of;\n\tcopyWithin = wrapNative(global.Array.prototype.copyWithin);\n\tfill = wrapNative(global.Array.prototype.fill);\n\tfind = wrapNative(global.Array.prototype.find);\n\tfindIndex = wrapNative(global.Array.prototype.findIndex);\n} else {\n\t// It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n\t// To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\tconst toInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tconst normalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n\n\tfrom = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((<any>arrayLike).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((<any>arrayLike).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tof = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tcopyWithin = function copyWithin<T>(\n\t\ttarget: ArrayLike<T>,\n\t\toffset: number,\n\t\tstart: number,\n\t\tend?: number\n\t): ArrayLike<T> {\n\t\tif (target == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(target.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in target) {\n\t\t\t\t(target as WritableArrayLike<T>)[offset] = target[start];\n\t\t\t} else {\n\t\t\t\tdelete (target as WritableArrayLike<T>)[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfill = function fill<T>(target: ArrayLike<T>, value: any, start?: number, end?: number): ArrayLike<T> {\n\t\tconst length = toLength(target.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < end) {\n\t\t\t(target as WritableArrayLike<T>)[i++] = value;\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tfind = function find<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): T | undefined {\n\t\tconst index = findIndex<T>(target, callback, thisArg);\n\t\treturn index !== -1 ? target[index] : undefined;\n\t};\n\n\tfindIndex = function findIndex<T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}): number {\n\t\tconst length = toLength(target.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(target[i], i, target)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (has('es7-array')) {\n\tincludes = wrapNative(global.Array.prototype.includes);\n} else {\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\tconst toLength = function toLength(length: number): number {\n\t\tlength = Number(length);\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\tincludes = function includes<T>(target: ArrayLike<T>, searchElement: T, fromIndex: number = 0): boolean {\n\t\tlet len = toLength(target.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = target[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n"]}