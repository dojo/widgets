{"version":3,"file":"math.js","sourceRoot":"","sources":["math.ts"],"names":[],"mappings":"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","sourcesContent":["import has from './support/has';\n\nexport const FRACTION_UNITS = Math.pow(2, 23);\nexport const MAX_FLOAT32 = 3.4028234663852886e38;\nexport const MIN_FLOAT32 = 1.401298464324817e-45;\n\n/**\n * Returns the hyperbolic arccosine of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let acosh: (n: number) => number = (<any>Math).acosh;\n\n/**\n * Returns the hyperbolic arcsine of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let asinh: (n: number) => number = (<any>Math).asinh;\n\n/**\n * Returns the hyperbolic arctangent of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let atanh: (n: number) => number = (<any>Math).atanh;\n\n/**\n * Returns the cube root of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let cbrt: (n: number) => number = (<any>Math).cbrt;\n\n/**\n * Returns the number of leading zero bits in the 32-bit\n * binary representation of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let clz32: (n: number) => number = (<any>Math).clz32;\n\n/**\n * Returns the hyperbolic cosine of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let cosh: (n: number) => number = (<any>Math).cosh;\n\n/**\n * Returns e raised to the specified power minus one.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let expm1: (n: number) => number = (<any>Math).expm1;\n\n/**\n * Returns the nearest single-precision float representation of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let fround: (n: number) => number = (<any>Math).fround;\n\n/**\n * Returns the square root of the sum of squares of its arguments.\n *\n * @return The result\n */\nexport let hypot: (...args: number[]) => number = (<any>Math).hypot;\n\n/**\n * Returns the result of the 32-bit multiplication of the two parameters.\n *\n * @param n The number to use in calculation\n * @param m The number to use in calculation\n * @return The result\n */\nexport let imul: (n: number, m: number) => number = (<any>Math).imul;\n\n/**\n * Returns the base 2 logarithm of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let log2: (n: number) => number = (<any>Math).log2;\n\n/**\n * Returns the base 10 logarithm of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let log10: (n: number) => number = (<any>Math).log10;\n\n/**\n * Returns the natural logarithm of 1 + a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let log1p: (n: number) => number = (<any>Math).log1p;\n\n/**\n * Returns the sign of a number, indicating whether the number is positive.\n *\n * @param n The number to use in calculation\n * @return 1 if the number is positive, -1 if the number is negative, or 0 if the number is 0\n */\nexport let sign: (n: number) => number = (<any>Math).sign;\n\n/**\n * Returns the hyperbolic sine of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let sinh: (n: number) => number = (<any>Math).sinh;\n\n/**\n * Returns the hyperbolic tangent of a number.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let tanh: (n: number) => number = (<any>Math).tanh;\n\n/**\n * Returns the integral part of a number by removing any fractional digits.\n *\n * @param n The number to use in calculation\n * @return The result\n */\nexport let trunc: (n: number) => number = (<any>Math).trunc;\n\nif (!has('es6-math')) {\n\tacosh = function acosh(n: number): number {\n\t\treturn Math.log(n + Math.sqrt(n * n - 1));\n\t};\n\n\tasinh = function asinh(n: number): number {\n\t\tif (n === -Infinity) {\n\t\t\treturn n;\n\t\t} else {\n\t\t\treturn Math.log(n + Math.sqrt(n * n + 1));\n\t\t}\n\t};\n\n\tatanh = function atanh(n: number): number {\n\t\treturn Math.log((1 + n) / (1 - n)) / 2;\n\t};\n\n\tcbrt = function cbrt(n: number): number {\n\t\tconst y = Math.pow(Math.abs(n), 1 / 3);\n\t\treturn n < 0 ? -y : y;\n\t};\n\n\tclz32 = function clz32(n: number): number {\n\t\tn = Number(n) >>> 0;\n\t\treturn n ? 32 - n.toString(2).length : 32;\n\t};\n\n\tcosh = function cosh(n: number): number {\n\t\tconst m = Math.exp(n);\n\t\treturn (m + 1 / m) / 2;\n\t};\n\n\texpm1 = function expm1(n: number): number {\n\t\treturn Math.exp(n) - 1;\n\t};\n\n\tfround = function(n: number): number {\n\t\treturn new Float32Array([n])[0];\n\t};\n\n\thypot = function hypot(...args: number[]): number {\n\t\t// See: http://mzl.la/1HDi6xP\n\t\tlet n = 0;\n\n\t\tfor (let arg of args) {\n\t\t\tif (arg === Infinity || arg === -Infinity) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\tn += arg * arg;\n\t\t}\n\t\treturn Math.sqrt(n);\n\t};\n\n\tlog2 = function log2(n: number): number {\n\t\treturn Math.log(n) / Math.LN2;\n\t};\n\n\tlog10 = function log10(n: number): number {\n\t\treturn Math.log(n) / Math.LN10;\n\t};\n\n\tlog1p = function log1p(n: number): number {\n\t\treturn Math.log(1 + n);\n\t};\n\n\tsign = function sign(n: number): number {\n\t\tn = Number(n);\n\t\tif (n === 0 || n !== n) {\n\t\t\treturn n;\n\t\t}\n\t\treturn n > 0 ? 1 : -1;\n\t};\n\n\tsinh = function sinh(n: number): number {\n\t\tconst m = Math.exp(n);\n\t\treturn (m - 1 / m) / 2;\n\t};\n\n\ttanh = function tanh(n: number): number {\n\t\tif (n === Infinity) {\n\t\t\treturn 1;\n\t\t} else if (n === -Infinity) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tconst y = Math.exp(2 * n);\n\t\t\treturn (y - 1) / (y + 1);\n\t\t}\n\t};\n\n\ttrunc = function trunc(n: number): number {\n\t\treturn n < 0 ? Math.ceil(n) : Math.floor(n);\n\t};\n}\n\nif (!has('es6-math-imul')) {\n\timul = function imul(n: number, m: number): number {\n\t\t// See: http://mzl.la/1K279FK\n\t\tconst ah = (n >>> 16) & 0xffff;\n\t\tconst al = n & 0xffff;\n\t\tconst bh = (m >>> 16) & 0xffff;\n\t\tconst bl = m & 0xffff;\n\t\treturn (al * bl + (((ah * bl + al * bh) << 16) >>> 0)) | 0;\n\t};\n}\n"]}