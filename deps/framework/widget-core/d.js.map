{"version":3,"file":"d.js","sourceRoot":"","sources":["../../../../src/widget-core/d.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,yCAAoC;IAepC;;OAEG;IACU,QAAA,KAAK,GAAG,gBAAM,CAAC,yBAAyB,CAAC,CAAC;IAEvD;;OAEG;IACU,QAAA,KAAK,GAAG,gBAAM,CAAC,yBAAyB,CAAC,CAAC;IAEvD;;OAEG;IACU,QAAA,QAAQ,GAAG,gBAAM,CAAC,oDAAoD,CAAC,CAAC;IAErF;;OAEG;IACH,iBACC,KAAe;QAEf,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,aAAK,CAAC,CAAC;IAC5E,CAAC;IAJD,0BAIC;IAED;;OAEG;IACH,iBAAwB,KAAY;QACnC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,aAAK,IAAI,KAAK,CAAC,IAAI,KAAK,gBAAQ,CAAC,CAAC,CAAC;IACzG,CAAC;IAFD,0BAEC;IAED;;OAEG;IACH,oBAA2B,KAAY;QACtC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,gBAAQ,CAAC,CAAC;IAC/E,CAAC;IAFD,gCAEC;IAED,uBAA8B,KAAU;QACvC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;IACxB,CAAC;IAFD,sCAEC;IAkDD,kBACC,MAAuB,EACvB,iBAA2D,EAC3D,SAA4B;QAE5B,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,QAAQ,CAAC;QACb,EAAE,CAAC,CAAC,OAAO,iBAAiB,KAAK,UAAU,CAAC,CAAC,CAAC;YAC7C,QAAQ,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;YACtC,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC;YACxC,OAAO,GAAG,iBAAiB,CAAC,OAAO,IAAI,KAAK,CAAC;QAC9C,CAAC;QAED,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAK,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3D;YACC,KAAK,GAAG,EAAE,CAAC;QACZ,CAAC;QACD,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;YACrB,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnE,KAAK,oBAAO,KAAK,EAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACzB,CAAC;YACF,CAAC;QACF,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IA/BD,4BA+BC;IAED;;OAEG;IACH,WACC,iBAAiD,EACjD,UAA2B,EAC3B,QAA4B;QAA5B,yBAAA,EAAA,aAA4B;QAE5B,MAAM,CAAC;YACN,QAAQ,UAAA;YACR,iBAAiB,mBAAA;YACjB,UAAU,YAAA;YACV,IAAI,EAAE,aAAK;SACX,CAAC;IACH,CAAC;IAXD,cAWC;IAQD,WACC,GAAW,EACX,oBAAgF,EAChF,QAAyC;QADzC,qCAAA,EAAA,yBAAgF;QAChF,yBAAA,EAAA,oBAAyC;QAEzC,IAAI,UAAU,GAAgD,oBAAoB,CAAC;QACnF,IAAI,0BAA0B,CAAC;QAE/B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YACzC,QAAQ,GAAG,oBAAoB,CAAC;YAChC,UAAU,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;YACtC,0BAA0B,GAAG,UAAU,CAAC;YACxC,UAAU,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,MAAM,CAAC;YACN,GAAG,KAAA;YACH,0BAA0B,4BAAA;YAC1B,QAAQ,UAAA;YACR,UAAU,YAAA;YACV,IAAI,EAAE,aAAK;SACX,CAAC;IACH,CAAC;IAzBD,cAyBC;IAED;;OAEG;IACH,aACC,EAAwE,EACxE,QAAkB;YADhB,cAAI,EAAE,aAAU,EAAV,+BAAU,EAAE,aAAU,EAAV,+BAAU,EAAE,UAAO,EAAP,4BAAO,EAAE,gBAAiB,EAAjB,sCAAiB;QAG1D,MAAM,CAAC;YACN,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;YAC1D,UAAU,EAAE,KAAK;YACjB,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,EAAE;YACV,QAAQ,UAAA;YACR,IAAI,EAAE,gBAAQ;YACd,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;YACjD,QAAQ,UAAA;SACS,CAAC;IACpB,CAAC;IAfD,kBAeC","sourcesContent":["import Symbol from '../shim/Symbol';\nimport {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions\n} from './interfaces';\nimport { InternalVNode, RenderResult } from './vdom';\n\n/**\n * The symbol identifier for a WNode type\n */\nexport const WNODE = Symbol('Identifier for a WNode.');\n\n/**\n * The symbol identifier for a VNode type\n */\nexport const VNODE = Symbol('Identifier for a VNode.');\n\n/**\n * The symbol identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = Symbol('Identifier for a VNode created using existing dom.');\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W>\n): child is WNode<W> {\n\treturn Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is VNode {\n\treturn Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel,\n\tproperties: W['properties'],\n\tchildren: W['children'] = []\n): WNode<W> {\n\treturn {\n\t\tchildren,\n\t\twidgetConstructor,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none' }: DomOptions,\n\tchildren?: DNode[]\n): VNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType\n\t} as InternalVNode;\n}\n"]}