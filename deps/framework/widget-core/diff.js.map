{"version":3,"file":"diff.js","sourceRoot":"","sources":["diff.ts"],"names":[],"mappings":";;;;;;;;;;;IACA,uCAA8C;IAE9C,yBAAyB,KAAU;QAClC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5F,CAAC;IAED,gBAAuB,gBAAqB,EAAE,WAAgB;QAC7D,MAAM,CAAC;YACN,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,WAAW;SAClB,CAAC;IACH,CAAC;IALD,wBAKC;IAED,gBAAuB,gBAAqB,EAAE,WAAgB;QAC7D,MAAM,CAAC;YACN,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,WAAW;SAClB,CAAC;IACH,CAAC;IALD,wBAKC;IAED,mBAA0B,gBAAqB,EAAE,WAAgB;QAChE,MAAM,CAAC;YACN,OAAO,EAAE,gBAAgB,KAAK,WAAW;YACzC,KAAK,EAAE,WAAW;SAClB,CAAC;IACH,CAAC;IALD,8BAKC;IAED,iBAAwB,gBAAqB,EAAE,WAAgB;QAC9D,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,IAAM,gBAAgB,GAAG,gBAAgB,IAAI,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC/E,IAAM,gBAAgB,GAAG,WAAW,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;QAErE,EAAE,CAAC,CAAC,CAAC,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC;gBACN,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,WAAW;aAClB,CAAC;QACH,CAAC;QAED,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnD,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEzC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5C,OAAO,GAAG,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG;gBAC1B,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACJ,CAAC;QACD,MAAM,CAAC;YACN,OAAO,SAAA;YACP,KAAK,EAAE,WAAW;SAClB,CAAC;IACH,CAAC;IA3BD,0BA2BC;IAED,cAAqB,gBAAqB,EAAE,WAAgB;QAC3D,IAAI,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,2BAAgB,CAAC,CAAC,CAAC;gBAC5C,MAAM,GAAG,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,GAAG,MAAM,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;YAChD,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,GAAG,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;QACnD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAdD,oBAcC","sourcesContent":["import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n"]}