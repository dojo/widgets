{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../../../../src/widget-core/decorators/registry.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,qDAAsE;IAYtE,kBAAyB,YAAqC,EAAE,MAAqB;QACpF,MAAM,CAAC,iCAAe,CAAC,UAAC,MAAM,EAAE,WAAW;YAC1C,MAAM,CAAC,YAAY,CAAC,kBAAkB,EAAE;gBAAA,iBAQvC;gBAPA,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAC5C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;wBACtC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;oBAChD,CAAC,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAZD,4BAYC;IAED,kBAAe,QAAQ,CAAC","sourcesContent":["import { handleDecorator, DecoratorHandler } from './handleDecorator';\nimport { RegistryItem } from '../Registry';\n\nexport interface RegistryConfig {\n\t[name: string]: RegistryItem;\n}\n\n/**\n * Decorator that can be used to register a widget with the calling widgets local registry\n */\nexport function registry(nameOrConfig: string, loader: RegistryItem): DecoratorHandler;\nexport function registry(nameOrConfig: RegistryConfig): DecoratorHandler;\nexport function registry(nameOrConfig: string | RegistryConfig, loader?: RegistryItem) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('afterConstructor', function(this: any) {\n\t\t\tif (typeof nameOrConfig === 'string') {\n\t\t\t\tthis.registry.define(nameOrConfig, loader);\n\t\t\t} else {\n\t\t\t\tObject.keys(nameOrConfig).forEach((name) => {\n\t\t\t\t\tthis.registry.define(name, nameOrConfig[name]);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport default registry;\n"]}