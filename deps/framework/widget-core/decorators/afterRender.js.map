{"version":3,"file":"afterRender.js","sourceRoot":"","sources":["afterRender.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,qDAAoD;IAOpD,qBAA4B,MAAiB;QAC5C,MAAM,CAAC,iCAAe,CAAC,UAAC,MAAM,EAAE,WAAW;YAC1C,MAAM,CAAC,YAAY,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACJ,CAAC;IAJD,kCAIC;IAED,kBAAe,WAAW,CAAC","sourcesContent":["import { handleDecorator } from './handleDecorator';\n\n/**\n * Decorator that can be used to register a function to run as an aspect to `render`\n */\nexport function afterRender(method: Function): (target: any) => void;\nexport function afterRender(): (target: any, propertyKey: string) => void;\nexport function afterRender(method?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\nexport default afterRender;\n"]}