{"version":3,"file":"beforeRender.mjs","sourceRoot":"","sources":["beforeRender.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAOpD,MAAM,uBAAuB,MAAiB;IAC7C,MAAM,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE;QAC9C,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,eAAe,YAAY,CAAC","sourcesContent":["import { handleDecorator } from './handleDecorator';\n\n/**\n * Decorator that can be used to register a reducer function to run as an aspect before to `render`\n */\nexport function beforeRender(method: Function): (target: any) => void;\nexport function beforeRender(): (target: any, propertyKey: string) => void;\nexport function beforeRender(method?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('beforeRender', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\nexport default beforeRender;\n"]}