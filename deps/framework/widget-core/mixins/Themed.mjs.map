{"version":3,"file":"Themed.mjs","sourceRoot":"","sources":["../../../../../src/widget-core/mixins/Themed.ts"],"names":[],"mappings":"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","sourcesContent":["import { Constructor, WidgetProperties, SupportedClassName } from './../interfaces';\nimport { Registry } from './../Registry';\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { WidgetBase } from './../WidgetBase';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\n\n/**\n * A lookup object for available class names\n */\nexport type ClassNames = {\n\t[key: string]: string;\n};\n\n/**\n * A lookup object for available widget classes names\n */\nexport interface Theme {\n\t[key: string]: object;\n}\n\n/**\n * Properties required for the Themed mixin\n */\nexport interface ThemedProperties<T = ClassNames> extends WidgetProperties {\n\tinjectedTheme?: any;\n\ttheme?: Theme;\n\textraClasses?: { [P in keyof T]?: string };\n}\n\nconst THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = Symbol('theme');\n\n/**\n * Interface for the ThemedMixin\n */\nexport interface ThemedMixin<T = ClassNames> {\n\ttheme(classes: SupportedClassName): SupportedClassName;\n\ttheme(classes: SupportedClassName[]): SupportedClassName[];\n\tproperties: ThemedProperties<T>;\n}\n\n/**\n * Decorator for base css classes\n */\nexport function theme(theme: {}) {\n\treturn handleDecorator((target) => {\n\t\ttarget.addDecorator('baseThemeClasses', theme);\n\t});\n}\n\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes: ClassNames[]): ClassNames {\n\treturn classes.reduce(\n\t\t(currentClassNames, baseClass) => {\n\t\t\tObject.keys(baseClass).forEach((key: string) => {\n\t\t\t\tcurrentClassNames[baseClass[key]] = key;\n\t\t\t});\n\t\t\treturn currentClassNames;\n\t\t},\n\t\t<ClassNames>{}\n\t);\n}\n\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme: any, themeRegistry: Registry): Injector {\n\tconst themeInjector = new Injector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector.get();\n\t});\n\treturn themeInjector;\n}\n\n/**\n * Function that returns a class decorated with with Themed functionality\n */\n\nexport function ThemedMixin<E, T extends Constructor<WidgetBase<ThemedProperties<E>>>>(\n\tBase: T\n): Constructor<ThemedMixin<E>> & T {\n\t@inject({\n\t\tname: INJECTED_THEME_KEY,\n\t\tgetProperties: (theme: Theme, properties: ThemedProperties): ThemedProperties => {\n\t\t\tif (!properties.theme) {\n\t\t\t\treturn { theme };\n\t\t\t}\n\t\t\treturn {};\n\t\t}\n\t})\n\tabstract class Themed extends Base {\n\t\tpublic abstract properties: ThemedProperties<E>;\n\n\t\t/**\n\t\t * The Themed baseClasses\n\t\t */\n\t\tprivate _registeredBaseTheme: ClassNames | undefined;\n\n\t\t/**\n\t\t * Registered base theme keys\n\t\t */\n\t\tprivate _registeredBaseThemeKeys: string[] = [];\n\n\t\t/**\n\t\t * Reverse lookup of the theme classes\n\t\t */\n\t\tprivate _baseThemeClassesReverseLookup: ClassNames | undefined;\n\n\t\t/**\n\t\t * Indicates if classes meta data need to be calculated.\n\t\t */\n\t\tprivate _recalculateClasses = true;\n\n\t\t/**\n\t\t * Loaded theme\n\t\t */\n\t\tprivate _theme: ClassNames = {};\n\n\t\tpublic theme(classes: SupportedClassName): SupportedClassName;\n\t\tpublic theme(classes: SupportedClassName[]): SupportedClassName[];\n\t\tpublic theme(classes: SupportedClassName | SupportedClassName[]): SupportedClassName | SupportedClassName[] {\n\t\t\tif (this._recalculateClasses) {\n\t\t\t\tthis._recalculateThemeClasses();\n\t\t\t}\n\t\t\tif (Array.isArray(classes)) {\n\t\t\t\treturn classes.map((className) => this._getThemeClass(className));\n\t\t\t}\n\t\t\treturn this._getThemeClass(classes);\n\t\t}\n\n\t\t/**\n\t\t * Function fired when `theme` or `extraClasses` are changed.\n\t\t */\n\t\t@diffProperty('theme', shallow)\n\t\t@diffProperty('extraClasses', shallow)\n\t\tprotected onPropertiesChanged() {\n\t\t\tthis._recalculateClasses = true;\n\t\t}\n\n\t\tprivate _getThemeClass(className: SupportedClassName): SupportedClassName {\n\t\t\tif (className === undefined || className === null) {\n\t\t\t\treturn className;\n\t\t\t}\n\n\t\t\tconst extraClasses = this.properties.extraClasses || ({} as any);\n\t\t\tconst themeClassName = this._baseThemeClassesReverseLookup![className];\n\t\t\tlet resultClassNames: string[] = [];\n\t\t\tif (!themeClassName) {\n\t\t\t\tconsole.warn(`Class name: '${className}' not found in theme`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (extraClasses[themeClassName]) {\n\t\t\t\tresultClassNames.push(extraClasses[themeClassName]);\n\t\t\t}\n\n\t\t\tif (this._theme[themeClassName]) {\n\t\t\t\tresultClassNames.push(this._theme[themeClassName]);\n\t\t\t} else {\n\t\t\t\tresultClassNames.push(this._registeredBaseTheme![themeClassName]);\n\t\t\t}\n\t\t\treturn resultClassNames.join(' ');\n\t\t}\n\n\t\tprivate _recalculateThemeClasses() {\n\t\t\tconst { theme = {} } = this.properties;\n\t\t\tconst baseThemes = this.getDecorator('baseThemeClasses');\n\t\t\tif (!this._registeredBaseTheme) {\n\t\t\t\tthis._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n\t\t\t\t\tconst { [THEME_KEY]: key, ...classes } = baseTheme;\n\t\t\t\t\tthis._registeredBaseThemeKeys.push(key);\n\t\t\t\t\treturn { ...finalBaseTheme, ...classes };\n\t\t\t\t}, {});\n\t\t\t\tthis._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n\t\t\t}\n\n\t\t\tthis._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n\t\t\t\treturn { ...baseTheme, ...theme[themeKey] };\n\t\t\t}, {});\n\n\t\t\tthis._recalculateClasses = false;\n\t\t}\n\t}\n\n\treturn Themed;\n}\n\nexport default ThemedMixin;\n"]}