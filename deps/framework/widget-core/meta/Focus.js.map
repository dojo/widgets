{"version":3,"file":"Focus.js","sourceRoot":"","sources":["../../../../../src/widget-core/meta/Focus.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,+BAA8B;IAC9B,wCAA+C;IAC/C,4CAAuC;IAOvC,IAAM,cAAc,GAAG;QACtB,MAAM,EAAE,KAAK;QACb,aAAa,EAAE,KAAK;KACpB,CAAC;IAEF;QAA2B,iCAAI;QAA/B;YAAA,qEAyCC;YAfQ,oBAAc,GAAG;gBACxB,KAAI,CAAC,cAAc,GAAG,gBAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;gBACpD,KAAI,CAAC,UAAU,EAAE,CAAC;YACnB,CAAC,CAAC;;QAYH,CAAC;QAtCO,mBAAG,GAAV,UAAW,GAAoB;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAE/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,sBAAM,cAAc,EAAG;YAC9B,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAG,gBAAM,CAAC,QAAQ,CAAC,aAAa,CAAC;gBACpD,IAAI,CAAC,eAAe,EAAE,CAAC;YACxB,CAAC;YAED,MAAM,CAAC;gBACN,MAAM,EAAE,IAAI,KAAK,IAAI,CAAC,cAAc;gBACpC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;aAC1E,CAAC;QACH,CAAC;QAEM,mBAAG,GAAV,UAAW,GAAoB;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC/B,IAAI,IAAK,IAAoB,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;QAOO,+BAAe,GAAvB;YACC,gBAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACjE,gBAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAClE,IAAI,CAAC,GAAG,CAAC,mBAAY,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QAEO,+BAAe,GAAvB;YACC,gBAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACpE,gBAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACtE,CAAC;QACF,YAAC;IAAD,CAAC,AAzCD,CAA2B,WAAI,GAyC9B;IAzCY,sBAAK;IA2ClB,kBAAe,KAAK,CAAC","sourcesContent":["import { Base } from './Base';\nimport { createHandle } from '../../core/lang';\nimport global from '../../shim/global';\n\nexport interface FocusResults {\n\tactive: boolean;\n\tcontainsFocus: boolean;\n}\n\nconst defaultResults = {\n\tactive: false,\n\tcontainsFocus: false\n};\n\nexport class Focus extends Base {\n\tprivate _activeElement: Element | undefined;\n\n\tpublic get(key: string | number): FocusResults {\n\t\tconst node = this.getNode(key);\n\n\t\tif (!node) {\n\t\t\treturn { ...defaultResults };\n\t\t}\n\n\t\tif (!this._activeElement) {\n\t\t\tthis._activeElement = global.document.activeElement;\n\t\t\tthis._createListener();\n\t\t}\n\n\t\treturn {\n\t\t\tactive: node === this._activeElement,\n\t\t\tcontainsFocus: !!this._activeElement && node.contains(this._activeElement)\n\t\t};\n\t}\n\n\tpublic set(key: string | number) {\n\t\tconst node = this.getNode(key);\n\t\tnode && (node as HTMLElement).focus();\n\t}\n\n\tprivate _onFocusChange = () => {\n\t\tthis._activeElement = global.document.activeElement;\n\t\tthis.invalidate();\n\t};\n\n\tprivate _createListener() {\n\t\tglobal.document.addEventListener('focusin', this._onFocusChange);\n\t\tglobal.document.addEventListener('focusout', this._onFocusChange);\n\t\tthis.own(createHandle(this._removeListener.bind(this)));\n\t}\n\n\tprivate _removeListener() {\n\t\tglobal.document.removeEventListener('focusin', this._onFocusChange);\n\t\tglobal.document.removeEventListener('focusout', this._onFocusChange);\n\t}\n}\n\nexport default Focus;\n"]}