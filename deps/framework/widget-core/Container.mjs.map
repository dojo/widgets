{"version":3,"file":"Container.mjs","sourceRoot":"","sources":["Container.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAiB,MAAM,qBAAqB,CAAC;AAE5D,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAIzD,MAAM,oBACL,SAAyC,EACzC,IAAmB,EACnB,EAAE,aAAa,EAAoC;IAInD,IAAM,eAAe,GAArB,qBAAsB,SAAQ,UAAoC;QACvD,MAAM;YACf,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;KACD,CAAA;IAJK,eAAe;QAFpB,YAAY,EAAE;QACd,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;OAC1B,eAAe,CAIpB;IACD,MAAM,CAAC,eAAe,CAAC;AACxB,CAAC;AAED,eAAe,SAAS,CAAC","sourcesContent":["import { WidgetBase } from './WidgetBase';\nimport { inject, GetProperties } from './decorators/inject';\nimport { Constructor, DNode, RegistryLabel } from './interfaces';\nimport { w } from './d';\nimport { alwaysRender } from './decorators/alwaysRender';\n\nexport type Container<T extends WidgetBase> = Constructor<WidgetBase<Partial<T['properties']>>>;\n\nexport function Container<W extends WidgetBase>(\n\tcomponent: Constructor<W> | RegistryLabel,\n\tname: RegistryLabel,\n\t{ getProperties }: { getProperties: GetProperties }\n): Container<W> {\n\t@alwaysRender()\n\t@inject({ name, getProperties })\n\tclass WidgetContainer extends WidgetBase<Partial<W['properties']>> {\n\t\tprotected render(): DNode {\n\t\t\treturn w(component, this.properties, this.children);\n\t\t}\n\t}\n\treturn WidgetContainer;\n}\n\nexport default Container;\n"]}