{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../../../src/i18n/util/main.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,gFAAgF;IAChF,IAAM,oBAAoB,GAAG,gCAAgC,CAAC;IAE9D;;;;;;;;;;;OAWG;IACH,yBAAgC,MAAc;QAC7C,IAAM,UAAU,GAAG,uBAAe,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACvB,IAAM,MAAM,GAAa,CAAC,OAAO,CAAC,CAAC;QAEnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9C,OAAO,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAZD,0CAYC;IAED;;;;;;;OAOG;IACU,QAAA,eAAe,GAAG,CAAC;QAC/B,iCAAiC,KAAa;YAC7C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACrC,CAAC;QAED,mBAAmB,MAAc;YAChC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC;YAED,MAAM,CAAC,MAAM;iBACX,KAAK,CAAC,GAAG,CAAC;iBACV,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACZ,GAAG,CAAC,UAAC,IAAY;gBACjB,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACzD,CAAC,CAAC;iBACD,IAAI,CAAC,GAAG,CAAC,CAAC;QACb,CAAC;QAED,MAAM,CAAC,UAAS,MAAc;YAC7B,IAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAErC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,IAAI,KAAK,CAAI,UAAU,4BAAyB,CAAC,CAAC;YACzD,CAAC;YAED,MAAM,CAAC,UAAU,CAAC;QACnB,CAAC,CAAC;IACH,CAAC,CAAC,EAAE,CAAC;IAEL;;;;;;;;;;;;OAYG;IACH,wBAA+B,MAAc;QAC5C,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAFD,wCAEC","sourcesContent":["// Matches an ISO 639.1/639.2 compatible language, followed by optional subtags.\nconst VALID_LOCALE_PATTERN = /^[a-z]{2,3}(-[a-z0-9\\-\\_]+)?$/i;\n\n/**\n * Retrieve a list of locales that can provide substitute for the specified locale\n * (including itself).\n *\n * For example, if 'fr-CA' is specified, then `[ 'fr', 'fr-CA' ]` is returned.\n *\n * @param locale\n * The target locale.\n *\n * @return\n * A list of locales that match the target locale.\n */\nexport function generateLocales(locale: string): string[] {\n\tconst normalized = normalizeLocale(locale);\n\tconst parts = normalized.split('-');\n\tlet current = parts[0];\n\tconst result: string[] = [current];\n\n\tfor (let i = 0; i < parts.length - 1; i += 1) {\n\t\tcurrent += '-' + parts[i + 1];\n\t\tresult.push(current);\n\t}\n\n\treturn result;\n}\n\n/**\n * Normalize a locale so that it can be converted to a bundle path.\n *\n * @param locale\n * The target locale.\n *\n * @return The normalized locale.\n */\nexport const normalizeLocale = (function() {\n\tfunction removeTrailingSeparator(value: string): string {\n\t\treturn value.replace(/(\\-|_)$/, '');\n\t}\n\n\tfunction normalize(locale: string): string {\n\t\tif (locale.indexOf('.') === -1) {\n\t\t\treturn removeTrailingSeparator(locale);\n\t\t}\n\n\t\treturn locale\n\t\t\t.split('.')\n\t\t\t.slice(0, -1)\n\t\t\t.map((part: string): string => {\n\t\t\t\treturn removeTrailingSeparator(part).replace(/_/g, '-');\n\t\t\t})\n\t\t\t.join('-');\n\t}\n\n\treturn function(locale: string): string {\n\t\tconst normalized = normalize(locale);\n\n\t\tif (!validateLocale(normalized)) {\n\t\t\tthrow new Error(`${normalized} is not a valid locale.`);\n\t\t}\n\n\t\treturn normalized;\n\t};\n})();\n\n/**\n * Validates that the provided locale at least begins with a ISO 639.1/639.2 comptabile language subtag,\n * and that any additional subtags contain only valid characters.\n *\n * While locales should adhere to the guidelines set forth by RFC 5646 (https://tools.ietf.org/html/rfc5646),\n * only the language subtag is strictly enforced.\n *\n * @param locale\n * The locale to validate.\n *\n * @return\n * `true` if the locale is valid; `false` otherwise.\n */\nexport function validateLocale(locale: string): boolean {\n\treturn VALID_LOCALE_PATTERN.test(locale);\n}\n"]}