{"version":3,"file":"Pointer.mjs","sourceRoot":"","sources":["../../../../../src/stores/state/Pointer.ts"],"names":[],"mappings":"AAAA,MAAM,iBAAiB,OAAe;IACrC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACxD,CAAC;AAED,gBAAgB,OAAe;IAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzD,CAAC;AAQD,MAAM,eAAe,QAAkB,EAAE,MAAW,EAAE,KAAK,GAAG,IAAI,EAAE,mBAAmB,GAAG,IAAI;IAC7F,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACX,MAAM,qBAAQ,MAAM,CAAE,CAAC;IACxB,CAAC;IACD,MAAM,aAAa,GAAkB;QACpC,MAAM;QACN,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,EAAE;KACX,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;QACxD,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,aAAa,CAAC;QACtB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC;YAC5D,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACjC,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACxC,IAAI,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAE3C,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAClD,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC;gBACjC,MAAM,CAAC,aAAa,CAAC;YACtB,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC3B,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACvC,MAAM,qBAAQ,MAAM,CAAE,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,GAAG,EAAE,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,GAAG,EAAE,CAAC;gBACb,CAAC;gBACD,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;gBACvC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;YAC/B,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,aAAa,CAAC;IACtB,CAAC,EAAE,aAAa,CAAC,CAAC;AACnB,CAAC;AAED,MAAM;IAGL,YAAY,QAA2B;QACtC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9E,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACrG,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,IAAW,QAAQ;QAClB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,IAAW,IAAI;QACd,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;IACnD,CAAC;IAED,GAAG,CAAC,MAAS;QACZ,MAAM,aAAa,GAAkB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/E,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,SAAgB,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,MAAM;QACL,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;CACD","sourcesContent":["export function decode(segment: string) {\n\treturn segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\nfunction encode(segment: string) {\n\treturn segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nexport interface PointerTarget {\n\tobject: any;\n\ttarget: any;\n\tsegment: string;\n}\n\nexport function walk(segments: string[], object: any, clone = true, continueOnUndefined = true): PointerTarget {\n\tif (clone) {\n\t\tobject = { ...object };\n\t}\n\tconst pointerTarget: PointerTarget = {\n\t\tobject,\n\t\ttarget: object,\n\t\tsegment: ''\n\t};\n\n\treturn segments.reduce((pointerTarget, segment, index) => {\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn pointerTarget;\n\t\t}\n\t\tif (Array.isArray(pointerTarget.target) && segment === '-') {\n\t\t\tsegment = String(pointerTarget.target.length - 1);\n\t\t}\n\t\tif (index + 1 < segments.length) {\n\t\t\tconst nextSegment = segments[index + 1];\n\t\t\tlet target = pointerTarget.target[segment];\n\n\t\t\tif (target === undefined && !continueOnUndefined) {\n\t\t\t\tpointerTarget.target = undefined;\n\t\t\t\treturn pointerTarget;\n\t\t\t}\n\n\t\t\tif (clone || target === undefined) {\n\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\ttarget = [...target];\n\t\t\t\t} else if (typeof target === 'object') {\n\t\t\t\t\ttarget = { ...target };\n\t\t\t\t} else if (isNaN(parseInt(nextSegment, 0))) {\n\t\t\t\t\ttarget = {};\n\t\t\t\t} else {\n\t\t\t\t\ttarget = [];\n\t\t\t\t}\n\t\t\t\tpointerTarget.target[segment] = target;\n\t\t\t\tpointerTarget.target = target;\n\t\t\t} else {\n\t\t\t\tpointerTarget.target = target;\n\t\t\t}\n\t\t} else {\n\t\t\tpointerTarget.segment = segment;\n\t\t}\n\t\treturn pointerTarget;\n\t}, pointerTarget);\n}\n\nexport class Pointer<T = any, U = any> {\n\tprivate readonly _segments: string[];\n\n\tconstructor(segments: string | string[]) {\n\t\tif (Array.isArray(segments)) {\n\t\t\tthis._segments = segments;\n\t\t} else {\n\t\t\tthis._segments = (segments[0] === '/' ? segments : `/${segments}`).split('/');\n\t\t\tthis._segments.shift();\n\t\t}\n\t\tif (segments.length === 0 || ((segments.length === 1 && segments[0] === '/') || segments[0] === '')) {\n\t\t\tthrow new Error('Access to the root is not supported.');\n\t\t}\n\t\tthis._segments = this._segments.map(decode);\n\t}\n\n\tpublic get segments(): string[] {\n\t\treturn this._segments;\n\t}\n\n\tpublic get path(): string {\n\t\treturn `/${this._segments.map(encode).join('/')}`;\n\t}\n\n\tget(object: T): U {\n\t\tconst pointerTarget: PointerTarget = walk(this.segments, object, false, false);\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn undefined as any;\n\t\t}\n\t\treturn pointerTarget.target[pointerTarget.segment];\n\t}\n\n\ttoJSON(): string {\n\t\treturn this.toString();\n\t}\n\n\ttoString(): string {\n\t\treturn this.path;\n\t}\n}\n"]}