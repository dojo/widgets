{"version":3,"file":"Pointer.js","sourceRoot":"","sources":["Pointer.ts"],"names":[],"mappings":"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","sourcesContent":["export function decode(segment: string) {\n\treturn segment.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\nfunction encode(segment: string) {\n\treturn segment.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\nexport interface PointerTarget {\n\tobject: any;\n\ttarget: any;\n\tsegment: string;\n}\n\nexport function walk(segments: string[], object: any, clone = true, continueOnUndefined = true): PointerTarget {\n\tif (clone) {\n\t\tobject = { ...object };\n\t}\n\tconst pointerTarget: PointerTarget = {\n\t\tobject,\n\t\ttarget: object,\n\t\tsegment: ''\n\t};\n\n\treturn segments.reduce((pointerTarget, segment, index) => {\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn pointerTarget;\n\t\t}\n\t\tif (Array.isArray(pointerTarget.target) && segment === '-') {\n\t\t\tsegment = String(pointerTarget.target.length - 1);\n\t\t}\n\t\tif (index + 1 < segments.length) {\n\t\t\tconst nextSegment = segments[index + 1];\n\t\t\tlet target = pointerTarget.target[segment];\n\n\t\t\tif (target === undefined && !continueOnUndefined) {\n\t\t\t\tpointerTarget.target = undefined;\n\t\t\t\treturn pointerTarget;\n\t\t\t}\n\n\t\t\tif (clone || target === undefined) {\n\t\t\t\tif (Array.isArray(target)) {\n\t\t\t\t\ttarget = [...target];\n\t\t\t\t} else if (typeof target === 'object') {\n\t\t\t\t\ttarget = { ...target };\n\t\t\t\t} else if (isNaN(parseInt(nextSegment, 0))) {\n\t\t\t\t\ttarget = {};\n\t\t\t\t} else {\n\t\t\t\t\ttarget = [];\n\t\t\t\t}\n\t\t\t\tpointerTarget.target[segment] = target;\n\t\t\t\tpointerTarget.target = target;\n\t\t\t} else {\n\t\t\t\tpointerTarget.target = target;\n\t\t\t}\n\t\t} else {\n\t\t\tpointerTarget.segment = segment;\n\t\t}\n\t\treturn pointerTarget;\n\t}, pointerTarget);\n}\n\nexport class Pointer<T = any, U = any> {\n\tprivate readonly _segments: string[];\n\n\tconstructor(segments: string | string[]) {\n\t\tif (Array.isArray(segments)) {\n\t\t\tthis._segments = segments;\n\t\t} else {\n\t\t\tthis._segments = (segments[0] === '/' ? segments : `/${segments}`).split('/');\n\t\t\tthis._segments.shift();\n\t\t}\n\t\tif (segments.length === 0 || ((segments.length === 1 && segments[0] === '/') || segments[0] === '')) {\n\t\t\tthrow new Error('Access to the root is not supported.');\n\t\t}\n\t\tthis._segments = this._segments.map(decode);\n\t}\n\n\tpublic get segments(): string[] {\n\t\treturn this._segments;\n\t}\n\n\tpublic get path(): string {\n\t\treturn `/${this._segments.map(encode).join('/')}`;\n\t}\n\n\tget(object: T): U {\n\t\tconst pointerTarget: PointerTarget = walk(this.segments, object, false, false);\n\t\tif (pointerTarget.target === undefined) {\n\t\t\treturn undefined as any;\n\t\t}\n\t\treturn pointerTarget.target[pointerTarget.segment];\n\t}\n\n\ttoJSON(): string {\n\t\treturn this.toString();\n\t}\n\n\ttoString(): string {\n\t\treturn this.path;\n\t}\n}\n"]}