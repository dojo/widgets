{"version":3,"file":"Router.js","sourceRoot":"","sources":["../../../../src/routing/Router.ts"],"names":[],"mappings":"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","sourcesContent":["import QueuingEvented from '../core/QueuingEvented';\nimport {\n\tRouteConfig,\n\tHistory,\n\tMatchType,\n\tOutletContext,\n\tParams,\n\tRouterInterface,\n\tRoute,\n\tRouterOptions\n} from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/interfaces';\n\nconst PARAM = Symbol('routing param');\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet: string;\n\tcontext: OutletContext;\n}\n\nexport class Router extends QueuingEvented<{ nav: NavEvent }> implements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _outletMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedOutlets: { [index: string]: OutletContext } = Object.create(null);\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultOutlet: string | undefined;\n\tprivate _history: History;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tconst { HistoryManager = HashHistory, base, window } = options;\n\t\tthis._register(config);\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedOutlets.errorOutlet && this._defaultOutlet) {\n\t\t\tconst path = this.link(this._defaultOutlet);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tconst { _outletMap, _currentParams, _currentQueryParams } = this;\n\t\tlet route = _outletMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ..._currentQueryParams, ..._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn linkPath;\n\t}\n\n\t/**\n\t * Returns the outlet context for the outlet identifier if one has been matched\n\t *\n\t * @param outletIdentifier The outlet identifer\n\t */\n\tpublic getOutlet(outletIdentifier: string): OutletContext | undefined {\n\t\treturn this._matchedOutlets[outletIdentifier];\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { onEnter, onExit, path, outlet, children, defaultRoute = false, defaultParams = {} } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: (symbol | string)[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\toutlet,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tonEnter,\n\t\t\t\tonExit\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultOutlet = outlet;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\tif (typeof segment === 'string' && segment[0] === '{') {\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('$').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._outletMap[outlet] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\tthis.emit({ type: 'navstart' });\n\t\tthis._matchedOutlets = Object.create(null);\n\t\tthis._currentParams = {};\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tlet matchedOutletContext: OutletContext | undefined;\n\t\tlet matchedOutlet: string | undefined;\n\t\tlet routes = [...this._routes];\n\t\tlet paramIndex = 0;\n\t\tlet segments = path.split('/');\n\t\tlet routeMatched = false;\n\t\tlet previousOutlet: string | undefined;\n\t\twhile (routes.length > 0) {\n\t\t\tif (segments.length === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst route = routes.shift()!;\n\t\t\tconst { onEnter, onExit } = route;\n\t\t\tlet type: MatchType = 'index';\n\t\t\tconst segmentsForRoute = [...segments];\n\t\t\tlet routeMatch = true;\n\t\t\tlet segmentIndex = 0;\n\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tthis._currentParams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (routeMatch === true) {\n\t\t\t\tpreviousOutlet = route.outlet;\n\t\t\t\trouteMatched = true;\n\t\t\t\tthis._matchedOutlets[route.outlet] = {\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams: { ...this._currentParams },\n\t\t\t\t\ttype,\n\t\t\t\t\tonEnter,\n\t\t\t\t\tonExit\n\t\t\t\t};\n\t\t\t\tmatchedOutletContext = this._matchedOutlets[route.outlet];\n\t\t\t\tmatchedOutlet = route.outlet;\n\t\t\t\tif (route.children.length) {\n\t\t\t\t\tparamIndex = 0;\n\t\t\t\t}\n\t\t\t\troutes = [...route.children];\n\t\t\t} else {\n\t\t\t\tif (previousOutlet !== undefined && routes.length === 0) {\n\t\t\t\t\tthis._matchedOutlets[previousOutlet].type = 'error';\n\t\t\t\t}\n\t\t\t\tsegments = [...segmentsForRoute];\n\t\t\t}\n\t\t}\n\t\tif (routeMatched === false) {\n\t\t\tthis._matchedOutlets.errorOutlet = {\n\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\tparams: { ...this._currentParams },\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\t\tif (matchedOutlet && matchedOutletContext) {\n\t\t\tthis.emit({ type: 'nav', outlet: matchedOutlet, context: matchedOutletContext });\n\t\t}\n\t};\n}\n\nexport default Router;\n"]}