{"version":3,"file":"StateHistory.mjs","sourceRoot":"","sources":["../../../../../src/routing/history/StateHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '../../shim/global';\nimport { History as HistoryInterface, HistoryOptions, OnChangeFunction } from './../interfaces';\n\nexport class StateHistory implements HistoryInterface {\n\tprivate _current: string;\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _window: Window;\n\tprivate _base: string;\n\n\tconstructor({ onChange, window = global.window, base = '/' }: HistoryOptions) {\n\t\tif (/(#|\\?)/.test(base)) {\n\t\t\tthrow new TypeError(\"base must not contain '#' or '?'\");\n\t\t}\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tthis._base = base;\n\t\tthis._current = this._window.location.pathname + this._window.location.search;\n\t\tthis._window.addEventListener('popstate', this._onChange, false);\n\t\tthis._onChange();\n\t}\n\n\tpublic prefix(path: string) {\n\t\tconst baseEndsWithSlash = /\\/$/.test(this._base);\n\t\tconst pathStartsWithSlash = /^\\//.test(path);\n\t\tif (baseEndsWithSlash && pathStartsWithSlash) {\n\t\t\treturn this._base + path.slice(1);\n\t\t} else if (!baseEndsWithSlash && !pathStartsWithSlash) {\n\t\t\treturn `${this._base}/${path}`;\n\t\t} else {\n\t\t\treturn this._base + path;\n\t\t}\n\t}\n\n\tpublic set(path: string) {\n\t\tconst value = ensureLeadingSlash(path);\n\t\tthis._window.history.pushState({}, '', this.prefix(value));\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst value = stripBase(this._base, this._window.location.pathname + this._window.location.search);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._current = value;\n\t\tthis._onChangeFunction(this._current);\n\t};\n}\n\nfunction stripBase(base: string, path: string): string {\n\tif (base === '/') {\n\t\treturn path;\n\t}\n\n\tif (path.indexOf(base) === 0) {\n\t\treturn ensureLeadingSlash(path.slice(base.length));\n\t} else {\n\t\treturn '/';\n\t}\n}\n\nfunction ensureLeadingSlash(path: string): string {\n\tif (path[0] !== '/') {\n\t\treturn `/${path}`;\n\t}\n\treturn path;\n}\n\nexport default StateHistory;\n"]}