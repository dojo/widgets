{"version":3,"file":"RouterInjector.mjs","sourceRoot":"","sources":["../../../../src/routing/RouterInjector.ts"],"names":[],"mappings":";AAGA,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAWlC;;;;;;;GAOG;AACH,MAAM,iCACL,MAAqB,EACrB,QAAkB,EAClB,UAAiC,EAAE;IAEnC,MAAM,EAAE,GAAG,GAAG,QAAQ,KAAuB,OAAO,EAA5B,gDAA4B,CAAC;IAErD,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IACpD,CAAC;IACD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IACjD,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,WAAuB,EAAE,EAAE;QACxD,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;QAC3C,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IACrB,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC;AACf,CAAC","sourcesContent":["import { Registry } from '../widget-core/Registry';\nimport { RegistryLabel } from '../widget-core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('navstart', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n"]}