{"version":3,"file":"Link.mjs","sourceRoot":"","sources":["../../../../src/routing/Link.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,CAAC,EAAE,MAAM,kBAAkB,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAK1D,MAAM,aAAa,GAAG,CAAC,MAAc,EAAE,UAA0B,EAAmB,EAAE;IACrF,MAAM,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE,OAAO,KAAe,UAAU,EAAvB,2EAAuB,CAAC;IAC3E,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAErD,MAAM,aAAa,GAAG,CAAC,KAAiB,EAAE,EAAE;QAC3C,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;QAE1B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACzE,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC;IACF,CAAC,CAAC;IACF,MAAM,iBACL,IAAI,EACJ,OAAO,EAAE,aAAa,IACnB,KAAK,EACP;AACH,CAAC,CAAC;AAEF,MAAM,eAAgB,SAAQ,UAA0B;IAC/C,QAAQ,CAAC,KAAiB;QACjC,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAES,MAAM;QACf,MAAM,KAAK,qBACP,IAAI,CAAC,UAAU,IAClB,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,OAAO,EAAE,SAAS,EAClB,EAAE,EAAE,SAAS,EACb,QAAQ,EAAE,SAAS,EACnB,MAAM,EAAE,SAAS,EACjB,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,SAAS,GACjB,CAAC;QACF,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;CACD;AAED,MAAM,qBAAqB,SAAiB;IAE3C,IAAM,IAAI,GAAV,UAAW,SAAQ,QAAQ;KAAG,CAAA;IAAxB,IAAI;QADT,MAAM,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;OACrC,IAAI,CAAoB;IAC9B,MAAM,CAAC,IAAI,CAAC;AACb,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;AAEzC,eAAe,IAAI,CAAC","sourcesContent":["import { WidgetBase } from '../widget-core/WidgetBase';\nimport { v } from '../widget-core/d';\nimport { inject } from '../widget-core/decorators/inject';\nimport { Constructor, DNode, VNodeProperties } from '../widget-core/interfaces';\nimport { LinkProperties } from './interfaces';\nimport { Router } from './Router';\n\nconst getProperties = (router: Router, properties: LinkProperties): VNodeProperties => {\n\tconst { to, isOutlet = true, params = {}, onClick, ...props } = properties;\n\tconst href = isOutlet ? router.link(to, params) : to;\n\n\tconst handleOnClick = (event: MouseEvent) => {\n\t\tonClick && onClick(event);\n\n\t\tif (!event.defaultPrevented && event.button === 0 && !properties.target) {\n\t\t\tevent.preventDefault();\n\t\t\thref !== undefined && router.setPath(href);\n\t\t}\n\t};\n\treturn {\n\t\thref,\n\t\tonClick: handleOnClick,\n\t\t...props\n\t};\n};\n\nexport class BaseLink extends WidgetBase<LinkProperties> {\n\tprivate _onClick(event: MouseEvent): void {\n\t\tthis.properties.onClick && this.properties.onClick(event);\n\t}\n\n\tprotected render(): DNode {\n\t\tconst props = {\n\t\t\t...this.properties,\n\t\t\tonclick: this._onClick,\n\t\t\tonClick: undefined,\n\t\t\tto: undefined,\n\t\t\tisOutlet: undefined,\n\t\t\tparams: undefined,\n\t\t\trouterKey: undefined,\n\t\t\trouter: undefined\n\t\t};\n\t\treturn v('a', props, this.children);\n\t}\n}\n\nexport function createLink(routerKey: string): Constructor<BaseLink> {\n\t@inject({ name: routerKey, getProperties })\n\tclass Link extends BaseLink {}\n\treturn Link;\n}\n\nexport const Link = createLink('router');\n\nexport default Link;\n"]}