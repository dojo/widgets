{"version":3,"file":"RouterInjector.js","sourceRoot":"","sources":["../../../../src/routing/RouterInjector.ts"],"names":[],"mappings":";;;;;;;;;;;;IAGA,mCAAkC;IAWlC;;;;;;;OAOG;IACH,gCACC,MAAqB,EACrB,QAAkB,EAClB,OAAmC;QAAnC,wBAAA,EAAA,YAAmC;QAE3B,IAAA,gBAAc,EAAd,mCAAc,EAAE,gDAAgB,CAAa;QAErD,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QACD,IAAM,MAAM,GAAG,IAAI,eAAM,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QACjD,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,UAAC,WAAuB;YACpD,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,cAAM,OAAA,WAAW,EAAE,EAAb,CAAa,CAAC,CAAC;YAC3C,MAAM,CAAC,cAAM,OAAA,MAAM,EAAN,CAAM,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAhBD,wDAgBC","sourcesContent":["import { Registry } from '../widget-core/Registry';\nimport { RegistryLabel } from '../widget-core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('navstart', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n"]}